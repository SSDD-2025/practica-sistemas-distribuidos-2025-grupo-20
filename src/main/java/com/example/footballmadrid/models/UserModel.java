package com.example.footballmadrid.models;

import jakarta.persistence.*;

import java.util.List;

@Entity
@Table(name = "userModel")
public class UserModel {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
//non relational variables

    private String username;
    private String password;

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public List<GameModel> getGameModel() {
        return gameModel;
    }

    //relational variables
    //list of comments
    @OneToMany(mappedBy ="userModel", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<CommentModel> commentModel;

    //list of pitches
    @ManyToMany()
    @JoinTable(
            name = "user_pitch",
            joinColumns = {@JoinColumn(name = "user_id")},
            inverseJoinColumns = {@JoinColumn(name = "pitch_id")}
    )
    private List<PitchModel> pitchModel;


    //List of Games
    @ManyToMany(mappedBy = "userModel")
    private List<GameModel>  gameModel;


    //List of chats
    @ManyToMany
    @JoinTable(
            name = "user_chat",
            joinColumns = {@JoinColumn(name = "user_id")},
            inverseJoinColumns = {@JoinColumn(name = "chat_id")}
    )
    private List<ChatModel> chatModel;

    //constructors

    public UserModel() {
    }
    public UserModel(String username, String password) {
        this.username = username;
        this.password = password;
    }




    //getters and setters, autogenerated

    public void setGameModel(List<GameModel> gameModel) {
        this.gameModel = gameModel;
    }

    public List<ChatModel> getChatModel() {
        return chatModel;
    }

    public void setChatModel(List<ChatModel> chatModel) {
        this.chatModel = chatModel;
    }

    public List<MessageModel> getMessageModel() {
        return messageModel;
    }

    public void setMessageModel(List<MessageModel> messageModel) {
        this.messageModel = messageModel;
    }

    @OneToMany(mappedBy = "userModel")
    private List<MessageModel> messageModel;

    public List<CommentModel> getCommentModel() {
        return commentModel;
    }

    public void setCommentModel(List<CommentModel> commentModel) {
        this.commentModel = commentModel;
    }

    public List<PitchModel> getPitchModel() {
        return pitchModel;
    }

    public void setPitchModel(List<PitchModel> pitchModel) {
        this.pitchModel = pitchModel;
    }


    public void setId(Long id) {
        this.id = id;
    }

    public Long getId() {
        return id;
    }
}
